// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: missions_service.proto

package missions

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Wager Type
//
// MissionScenarioType represents the scenario type of a mission.
type ListMissionsRequest_MissionScenarioType int32

const (
	// MISSION_SCENARIO_TYPE_UNDEFINED is the zero value MissionScenarioType.
	ListMissionsRequest_MISSION_SCENARIO_TYPE_UNSPECIFIED ListMissionsRequest_MissionScenarioType = 0
	// MISSION_SCENARIO_TYPE_SINGLE_WAGER represents a single wager mission scenario.
	ListMissionsRequest_MISSION_SCENARIO_TYPE_SINGLE_WAGER ListMissionsRequest_MissionScenarioType = 1
	// MISSION_SCENARIO_TYPE_CUMULATIVE_WAGER represents a cumulative wager mission scenario.
	ListMissionsRequest_MISSION_SCENARIO_TYPE_CUMULATIVE_WAGER ListMissionsRequest_MissionScenarioType = 2
	// MISSION_SCENARIO_TYPE_SINGLE_PAYMENT represents a single payment scenario type.
	ListMissionsRequest_MISSION_SCENARIO_TYPE_SINGLE_PAYMENT ListMissionsRequest_MissionScenarioType = 3
	// MISSION_SCENARIO_TYPE_CUMULATIVE_PAYMENT represents a cumulative payment scenario type.
	ListMissionsRequest_MISSION_SCENARIO_TYPE_CUMULATIVE_PAYMENT ListMissionsRequest_MissionScenarioType = 4
)

// Enum value maps for ListMissionsRequest_MissionScenarioType.
var (
	ListMissionsRequest_MissionScenarioType_name = map[int32]string{
		0: "MISSION_SCENARIO_TYPE_UNSPECIFIED",
		1: "MISSION_SCENARIO_TYPE_SINGLE_WAGER",
		2: "MISSION_SCENARIO_TYPE_CUMULATIVE_WAGER",
		3: "MISSION_SCENARIO_TYPE_SINGLE_PAYMENT",
		4: "MISSION_SCENARIO_TYPE_CUMULATIVE_PAYMENT",
	}
	ListMissionsRequest_MissionScenarioType_value = map[string]int32{
		"MISSION_SCENARIO_TYPE_UNSPECIFIED":        0,
		"MISSION_SCENARIO_TYPE_SINGLE_WAGER":       1,
		"MISSION_SCENARIO_TYPE_CUMULATIVE_WAGER":   2,
		"MISSION_SCENARIO_TYPE_SINGLE_PAYMENT":     3,
		"MISSION_SCENARIO_TYPE_CUMULATIVE_PAYMENT": 4,
	}
)

func (x ListMissionsRequest_MissionScenarioType) Enum() *ListMissionsRequest_MissionScenarioType {
	p := new(ListMissionsRequest_MissionScenarioType)
	*p = x
	return p
}

func (x ListMissionsRequest_MissionScenarioType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMissionsRequest_MissionScenarioType) Descriptor() protoreflect.EnumDescriptor {
	return file_missions_service_proto_enumTypes[0].Descriptor()
}

func (ListMissionsRequest_MissionScenarioType) Type() protoreflect.EnumType {
	return &file_missions_service_proto_enumTypes[0]
}

func (x ListMissionsRequest_MissionScenarioType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMissionsRequest_MissionScenarioType.Descriptor instead.
func (ListMissionsRequest_MissionScenarioType) EnumDescriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{0, 0}
}

// OptInStrategyType is an enum for the different mission opt-in strategies.
type ListMissionsRequest_MissionOptInStrategyType int32

const (
	// MISSION_OPT_IN_STRATEGY_TYPE_UNSPECIFIED is zero value definition.
	ListMissionsRequest_MISSION_OPT_IN_STRATEGY_TYPE_UNSPECIFIED ListMissionsRequest_MissionOptInStrategyType = 0
	// MISSION_OPT_IN_STRATEGY_TYPE_MANUAL indicates a manual opt-in strategy.
	ListMissionsRequest_MISSION_OPT_IN_STRATEGY_TYPE_MANUAL ListMissionsRequest_MissionOptInStrategyType = 1
	// MISSION_OPT_IN_STRATEGY_TYPE_AUTOMATIC indicates automatic strategy.
	ListMissionsRequest_MISSION_OPT_IN_STRATEGY_TYPE_AUTOMATIC ListMissionsRequest_MissionOptInStrategyType = 2
)

// Enum value maps for ListMissionsRequest_MissionOptInStrategyType.
var (
	ListMissionsRequest_MissionOptInStrategyType_name = map[int32]string{
		0: "MISSION_OPT_IN_STRATEGY_TYPE_UNSPECIFIED",
		1: "MISSION_OPT_IN_STRATEGY_TYPE_MANUAL",
		2: "MISSION_OPT_IN_STRATEGY_TYPE_AUTOMATIC",
	}
	ListMissionsRequest_MissionOptInStrategyType_value = map[string]int32{
		"MISSION_OPT_IN_STRATEGY_TYPE_UNSPECIFIED": 0,
		"MISSION_OPT_IN_STRATEGY_TYPE_MANUAL":      1,
		"MISSION_OPT_IN_STRATEGY_TYPE_AUTOMATIC":   2,
	}
)

func (x ListMissionsRequest_MissionOptInStrategyType) Enum() *ListMissionsRequest_MissionOptInStrategyType {
	p := new(ListMissionsRequest_MissionOptInStrategyType)
	*p = x
	return p
}

func (x ListMissionsRequest_MissionOptInStrategyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMissionsRequest_MissionOptInStrategyType) Descriptor() protoreflect.EnumDescriptor {
	return file_missions_service_proto_enumTypes[1].Descriptor()
}

func (ListMissionsRequest_MissionOptInStrategyType) Type() protoreflect.EnumType {
	return &file_missions_service_proto_enumTypes[1]
}

func (x ListMissionsRequest_MissionOptInStrategyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMissionsRequest_MissionOptInStrategyType.Descriptor instead.
func (ListMissionsRequest_MissionOptInStrategyType) EnumDescriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{0, 1}
}

// MissionConditionType is an enum for the different mission condition types.
type ListMissionsRequest_MissionConditionType int32

const (
	// MISSION_condition_TYPE_UNSPECIFIED is a zero value definition.
	ListMissionsRequest_MISSION_CONDITION_TYPE_UNSPECIFIED ListMissionsRequest_MissionConditionType = 0
	// MISSION_condition_TYPE_SPORT is sport condition type.
	ListMissionsRequest_MISSION_CONDITION_TYPE_SPORT ListMissionsRequest_MissionConditionType = 1
	// MISSION_condition_TYPE_CASINO is casino condition type.
	ListMissionsRequest_MISSION_CONDITION_TYPE_CASINO ListMissionsRequest_MissionConditionType = 2
	// MISSION_condition_TYPE_DEPOSIT is casino condition type.
	ListMissionsRequest_MISSION_CONDITION_TYPE_DEPOSIT ListMissionsRequest_MissionConditionType = 3
)

// Enum value maps for ListMissionsRequest_MissionConditionType.
var (
	ListMissionsRequest_MissionConditionType_name = map[int32]string{
		0: "MISSION_CONDITION_TYPE_UNSPECIFIED",
		1: "MISSION_CONDITION_TYPE_SPORT",
		2: "MISSION_CONDITION_TYPE_CASINO",
		3: "MISSION_CONDITION_TYPE_DEPOSIT",
	}
	ListMissionsRequest_MissionConditionType_value = map[string]int32{
		"MISSION_CONDITION_TYPE_UNSPECIFIED": 0,
		"MISSION_CONDITION_TYPE_SPORT":       1,
		"MISSION_CONDITION_TYPE_CASINO":      2,
		"MISSION_CONDITION_TYPE_DEPOSIT":     3,
	}
)

func (x ListMissionsRequest_MissionConditionType) Enum() *ListMissionsRequest_MissionConditionType {
	p := new(ListMissionsRequest_MissionConditionType)
	*p = x
	return p
}

func (x ListMissionsRequest_MissionConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMissionsRequest_MissionConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_missions_service_proto_enumTypes[2].Descriptor()
}

func (ListMissionsRequest_MissionConditionType) Type() protoreflect.EnumType {
	return &file_missions_service_proto_enumTypes[2]
}

func (x ListMissionsRequest_MissionConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMissionsRequest_MissionConditionType.Descriptor instead.
func (ListMissionsRequest_MissionConditionType) EnumDescriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{0, 2}
}

// MissionStatus mission status type.
type ListMissionsRequest_MissionStatus int32

const (
	// MISSION_STATUS_UNSPECIFIED describes unspecified mission status.
	ListMissionsRequest_MISSION_STATUS_UNSPECIFIED ListMissionsRequest_MissionStatus = 0
	// MISSION_STATUS_ACTIVE describes active mission status.
	ListMissionsRequest_MISSION_STATUS_ACTIVE ListMissionsRequest_MissionStatus = 1
	// MISSION_STATUS_SCHEDULED describes scheduled mission status.
	ListMissionsRequest_MISSION_STATUS_SCHEDULED ListMissionsRequest_MissionStatus = 2
	// MISSION_STATUS_EXPIRED describes expired mission status.
	ListMissionsRequest_MISSION_STATUS_EXPIRED ListMissionsRequest_MissionStatus = 3
	// MISSION_STATUS_ARCHIVED describes archived mission status.
	ListMissionsRequest_MISSION_STATUS_ARCHIVED ListMissionsRequest_MissionStatus = 4
	// MISSION_STATUS_DELETED describes deleted mission status.
	ListMissionsRequest_MISSION_STATUS_DELETED ListMissionsRequest_MissionStatus = 5
)

// Enum value maps for ListMissionsRequest_MissionStatus.
var (
	ListMissionsRequest_MissionStatus_name = map[int32]string{
		0: "MISSION_STATUS_UNSPECIFIED",
		1: "MISSION_STATUS_ACTIVE",
		2: "MISSION_STATUS_SCHEDULED",
		3: "MISSION_STATUS_EXPIRED",
		4: "MISSION_STATUS_ARCHIVED",
		5: "MISSION_STATUS_DELETED",
	}
	ListMissionsRequest_MissionStatus_value = map[string]int32{
		"MISSION_STATUS_UNSPECIFIED": 0,
		"MISSION_STATUS_ACTIVE":      1,
		"MISSION_STATUS_SCHEDULED":   2,
		"MISSION_STATUS_EXPIRED":     3,
		"MISSION_STATUS_ARCHIVED":    4,
		"MISSION_STATUS_DELETED":     5,
	}
)

func (x ListMissionsRequest_MissionStatus) Enum() *ListMissionsRequest_MissionStatus {
	p := new(ListMissionsRequest_MissionStatus)
	*p = x
	return p
}

func (x ListMissionsRequest_MissionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMissionsRequest_MissionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_missions_service_proto_enumTypes[3].Descriptor()
}

func (ListMissionsRequest_MissionStatus) Type() protoreflect.EnumType {
	return &file_missions_service_proto_enumTypes[3]
}

func (x ListMissionsRequest_MissionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMissionsRequest_MissionStatus.Descriptor instead.
func (ListMissionsRequest_MissionStatus) EnumDescriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{0, 3}
}

// Wager Type
//
// MissionScenarioType represents the scenario type of a mission.
type ListMissionsResponse_MissionScenarioType int32

const (
	// MISSION_SCENARIO_TYPE_UNDEFINED is the zero value MissionScenarioType.
	ListMissionsResponse_MISSION_SCENARIO_TYPE_UNSPECIFIED ListMissionsResponse_MissionScenarioType = 0
	// MISSION_SCENARIO_TYPE_SINGLE_WAGER represents a single wager mission scenario.
	ListMissionsResponse_MISSION_SCENARIO_TYPE_SINGLE_WAGER ListMissionsResponse_MissionScenarioType = 1
	// MISSION_SCENARIO_TYPE_CUMULATIVE_WAGER represents a cumulative wager mission scenario.
	ListMissionsResponse_MISSION_SCENARIO_TYPE_CUMULATIVE_WAGER ListMissionsResponse_MissionScenarioType = 2
	// MISSION_SCENARIO_TYPE_SINGLE_PAYMENT represents a single payment scenario type.
	ListMissionsResponse_MISSION_SCENARIO_TYPE_SINGLE_PAYMENT ListMissionsResponse_MissionScenarioType = 3
	// MISSION_SCENARIO_TYPE_CUMULATIVE_PAYMENT represents a cumulative payment scenario type.
	ListMissionsResponse_MISSION_SCENARIO_TYPE_CUMULATIVE_PAYMENT ListMissionsResponse_MissionScenarioType = 4
)

// Enum value maps for ListMissionsResponse_MissionScenarioType.
var (
	ListMissionsResponse_MissionScenarioType_name = map[int32]string{
		0: "MISSION_SCENARIO_TYPE_UNSPECIFIED",
		1: "MISSION_SCENARIO_TYPE_SINGLE_WAGER",
		2: "MISSION_SCENARIO_TYPE_CUMULATIVE_WAGER",
		3: "MISSION_SCENARIO_TYPE_SINGLE_PAYMENT",
		4: "MISSION_SCENARIO_TYPE_CUMULATIVE_PAYMENT",
	}
	ListMissionsResponse_MissionScenarioType_value = map[string]int32{
		"MISSION_SCENARIO_TYPE_UNSPECIFIED":        0,
		"MISSION_SCENARIO_TYPE_SINGLE_WAGER":       1,
		"MISSION_SCENARIO_TYPE_CUMULATIVE_WAGER":   2,
		"MISSION_SCENARIO_TYPE_SINGLE_PAYMENT":     3,
		"MISSION_SCENARIO_TYPE_CUMULATIVE_PAYMENT": 4,
	}
)

func (x ListMissionsResponse_MissionScenarioType) Enum() *ListMissionsResponse_MissionScenarioType {
	p := new(ListMissionsResponse_MissionScenarioType)
	*p = x
	return p
}

func (x ListMissionsResponse_MissionScenarioType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMissionsResponse_MissionScenarioType) Descriptor() protoreflect.EnumDescriptor {
	return file_missions_service_proto_enumTypes[4].Descriptor()
}

func (ListMissionsResponse_MissionScenarioType) Type() protoreflect.EnumType {
	return &file_missions_service_proto_enumTypes[4]
}

func (x ListMissionsResponse_MissionScenarioType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMissionsResponse_MissionScenarioType.Descriptor instead.
func (ListMissionsResponse_MissionScenarioType) EnumDescriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{1, 0}
}

// OptInStrategyType is an enum for the different mission opt-in strategies.
type ListMissionsResponse_MissionOptInStrategyType int32

const (
	// MISSION_OPT_IN_STRATEGY_TYPE_UNSPECIFIED is zero value definition.
	ListMissionsResponse_MISSION_OPT_IN_STRATEGY_TYPE_UNSPECIFIED ListMissionsResponse_MissionOptInStrategyType = 0
	// MISSION_OPT_IN_STRATEGY_TYPE_MANUAL indicates a manual opt-in strategy.
	ListMissionsResponse_MISSION_OPT_IN_STRATEGY_TYPE_MANUAL ListMissionsResponse_MissionOptInStrategyType = 1
	// MISSION_OPT_IN_STRATEGY_TYPE_AUTOMATIC indicates automatic strategy.
	ListMissionsResponse_MISSION_OPT_IN_STRATEGY_TYPE_AUTOMATIC ListMissionsResponse_MissionOptInStrategyType = 2
)

// Enum value maps for ListMissionsResponse_MissionOptInStrategyType.
var (
	ListMissionsResponse_MissionOptInStrategyType_name = map[int32]string{
		0: "MISSION_OPT_IN_STRATEGY_TYPE_UNSPECIFIED",
		1: "MISSION_OPT_IN_STRATEGY_TYPE_MANUAL",
		2: "MISSION_OPT_IN_STRATEGY_TYPE_AUTOMATIC",
	}
	ListMissionsResponse_MissionOptInStrategyType_value = map[string]int32{
		"MISSION_OPT_IN_STRATEGY_TYPE_UNSPECIFIED": 0,
		"MISSION_OPT_IN_STRATEGY_TYPE_MANUAL":      1,
		"MISSION_OPT_IN_STRATEGY_TYPE_AUTOMATIC":   2,
	}
)

func (x ListMissionsResponse_MissionOptInStrategyType) Enum() *ListMissionsResponse_MissionOptInStrategyType {
	p := new(ListMissionsResponse_MissionOptInStrategyType)
	*p = x
	return p
}

func (x ListMissionsResponse_MissionOptInStrategyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMissionsResponse_MissionOptInStrategyType) Descriptor() protoreflect.EnumDescriptor {
	return file_missions_service_proto_enumTypes[5].Descriptor()
}

func (ListMissionsResponse_MissionOptInStrategyType) Type() protoreflect.EnumType {
	return &file_missions_service_proto_enumTypes[5]
}

func (x ListMissionsResponse_MissionOptInStrategyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMissionsResponse_MissionOptInStrategyType.Descriptor instead.
func (ListMissionsResponse_MissionOptInStrategyType) EnumDescriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{1, 1}
}

// MissionConditionType is an enum for the different mission condition types.
type ListMissionsResponse_MissionConditionType int32

const (
	// MISSION_condition_TYPE_UNSPECIFIED is a zero value definition.
	ListMissionsResponse_MISSION_CONDITION_TYPE_UNSPECIFIED ListMissionsResponse_MissionConditionType = 0
	// MISSION_condition_TYPE_SPORT is sport condition type.
	ListMissionsResponse_MISSION_CONDITION_TYPE_SPORT ListMissionsResponse_MissionConditionType = 1
	// MISSION_condition_TYPE_CASINO is casino condition type.
	ListMissionsResponse_MISSION_CONDITION_TYPE_CASINO ListMissionsResponse_MissionConditionType = 2
	// MISSION_condition_TYPE_DEPOSIT is casino condition type.
	ListMissionsResponse_MISSION_CONDITION_TYPE_DEPOSIT ListMissionsResponse_MissionConditionType = 3
)

// Enum value maps for ListMissionsResponse_MissionConditionType.
var (
	ListMissionsResponse_MissionConditionType_name = map[int32]string{
		0: "MISSION_CONDITION_TYPE_UNSPECIFIED",
		1: "MISSION_CONDITION_TYPE_SPORT",
		2: "MISSION_CONDITION_TYPE_CASINO",
		3: "MISSION_CONDITION_TYPE_DEPOSIT",
	}
	ListMissionsResponse_MissionConditionType_value = map[string]int32{
		"MISSION_CONDITION_TYPE_UNSPECIFIED": 0,
		"MISSION_CONDITION_TYPE_SPORT":       1,
		"MISSION_CONDITION_TYPE_CASINO":      2,
		"MISSION_CONDITION_TYPE_DEPOSIT":     3,
	}
)

func (x ListMissionsResponse_MissionConditionType) Enum() *ListMissionsResponse_MissionConditionType {
	p := new(ListMissionsResponse_MissionConditionType)
	*p = x
	return p
}

func (x ListMissionsResponse_MissionConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMissionsResponse_MissionConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_missions_service_proto_enumTypes[6].Descriptor()
}

func (ListMissionsResponse_MissionConditionType) Type() protoreflect.EnumType {
	return &file_missions_service_proto_enumTypes[6]
}

func (x ListMissionsResponse_MissionConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMissionsResponse_MissionConditionType.Descriptor instead.
func (ListMissionsResponse_MissionConditionType) EnumDescriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{1, 2}
}

// MissionStatus mission status type.
type ListMissionsResponse_MissionStatus int32

const (
	// MISSION_STATUS_UNSPECIFIED describes unspecified mission status.
	ListMissionsResponse_MISSION_STATUS_UNSPECIFIED ListMissionsResponse_MissionStatus = 0
	// MISSION_STATUS_ACTIVE describes active mission status.
	ListMissionsResponse_MISSION_STATUS_ACTIVE ListMissionsResponse_MissionStatus = 1
	// MISSION_STATUS_SCHEDULED describes scheduled mission status.
	ListMissionsResponse_MISSION_STATUS_SCHEDULED ListMissionsResponse_MissionStatus = 2
	// MISSION_STATUS_EXPIRED describes expired mission status.
	ListMissionsResponse_MISSION_STATUS_EXPIRED ListMissionsResponse_MissionStatus = 3
	// MISSION_STATUS_ARCHIVED describes archived mission status.
	ListMissionsResponse_MISSION_STATUS_ARCHIVED ListMissionsResponse_MissionStatus = 4
	// MISSION_STATUS_DELETED describes deleted mission status.
	ListMissionsResponse_MISSION_STATUS_DELETED ListMissionsResponse_MissionStatus = 5
)

// Enum value maps for ListMissionsResponse_MissionStatus.
var (
	ListMissionsResponse_MissionStatus_name = map[int32]string{
		0: "MISSION_STATUS_UNSPECIFIED",
		1: "MISSION_STATUS_ACTIVE",
		2: "MISSION_STATUS_SCHEDULED",
		3: "MISSION_STATUS_EXPIRED",
		4: "MISSION_STATUS_ARCHIVED",
		5: "MISSION_STATUS_DELETED",
	}
	ListMissionsResponse_MissionStatus_value = map[string]int32{
		"MISSION_STATUS_UNSPECIFIED": 0,
		"MISSION_STATUS_ACTIVE":      1,
		"MISSION_STATUS_SCHEDULED":   2,
		"MISSION_STATUS_EXPIRED":     3,
		"MISSION_STATUS_ARCHIVED":    4,
		"MISSION_STATUS_DELETED":     5,
	}
)

func (x ListMissionsResponse_MissionStatus) Enum() *ListMissionsResponse_MissionStatus {
	p := new(ListMissionsResponse_MissionStatus)
	*p = x
	return p
}

func (x ListMissionsResponse_MissionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMissionsResponse_MissionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_missions_service_proto_enumTypes[7].Descriptor()
}

func (ListMissionsResponse_MissionStatus) Type() protoreflect.EnumType {
	return &file_missions_service_proto_enumTypes[7]
}

func (x ListMissionsResponse_MissionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMissionsResponse_MissionStatus.Descriptor instead.
func (ListMissionsResponse_MissionStatus) EnumDescriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{1, 3}
}

// ListMissionsRequest is a client request for listing missions.
type ListMissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    *ListMissionsRequest_Filters `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
	Pagination *Pagination                  `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListMissionsRequest) Reset() {
	*x = ListMissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_missions_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionsRequest) ProtoMessage() {}

func (x *ListMissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_missions_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionsRequest.ProtoReflect.Descriptor instead.
func (*ListMissionsRequest) Descriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListMissionsRequest) GetFilters() *ListMissionsRequest_Filters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListMissionsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ListMissionsResponse is a server response for listing missions.
type ListMissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Missions   []*ListMissionsResponse_Mission `protobuf:"bytes,1,rep,name=missions,proto3" json:"missions,omitempty"`
	TotalCount int64                           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListMissionsResponse) Reset() {
	*x = ListMissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_missions_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionsResponse) ProtoMessage() {}

func (x *ListMissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_missions_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionsResponse.ProtoReflect.Descriptor instead.
func (*ListMissionsResponse) Descriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListMissionsResponse) GetMissions() []*ListMissionsResponse_Mission {
	if x != nil {
		return x.Missions
	}
	return nil
}

func (x *ListMissionsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// This is the pagination struct for each filter.
type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	ItemsPerPage int64 `protobuf:"varint,2,opt,name=items_per_page,json=itemsPerPage,proto3" json:"items_per_page,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_missions_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_missions_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{2}
}

func (x *Pagination) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetItemsPerPage() int64 {
	if x != nil {
		return x.ItemsPerPage
	}
	return 0
}

// Error is a message type for domain specific errors.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_missions_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_missions_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{3}
}

func (x *Error) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Filters message contains possible filters for the listing of missions.
type ListMissionsRequest_Filters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalName       string                                         `protobuf:"bytes,1,opt,name=internal_name,json=internalName,proto3" json:"internal_name,omitempty"`
	ScenarioTypes      []ListMissionsRequest_MissionScenarioType      `protobuf:"varint,2,rep,packed,name=scenario_types,json=scenarioTypes,proto3,enum=missions.ListMissionsRequest_MissionScenarioType" json:"scenario_types,omitempty"`
	OptInStrategyTypes []ListMissionsRequest_MissionOptInStrategyType `protobuf:"varint,3,rep,packed,name=opt_in_strategy_types,json=optInStrategyTypes,proto3,enum=missions.ListMissionsRequest_MissionOptInStrategyType" json:"opt_in_strategy_types,omitempty"`
	ConditionTypes     []ListMissionsRequest_MissionConditionType     `protobuf:"varint,4,rep,packed,name=condition_types,json=conditionTypes,proto3,enum=missions.ListMissionsRequest_MissionConditionType" json:"condition_types,omitempty"`
	Statuses           []ListMissionsRequest_MissionStatus            `protobuf:"varint,5,rep,packed,name=statuses,proto3,enum=missions.ListMissionsRequest_MissionStatus" json:"statuses,omitempty"`
	ActiveFrom         *timestamppb.Timestamp                         `protobuf:"bytes,6,opt,name=active_from,json=activeFrom,proto3" json:"active_from,omitempty"`
	ActiveTo           *timestamppb.Timestamp                         `protobuf:"bytes,7,opt,name=active_to,json=activeTo,proto3" json:"active_to,omitempty"`
}

func (x *ListMissionsRequest_Filters) Reset() {
	*x = ListMissionsRequest_Filters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_missions_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionsRequest_Filters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionsRequest_Filters) ProtoMessage() {}

func (x *ListMissionsRequest_Filters) ProtoReflect() protoreflect.Message {
	mi := &file_missions_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionsRequest_Filters.ProtoReflect.Descriptor instead.
func (*ListMissionsRequest_Filters) Descriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ListMissionsRequest_Filters) GetInternalName() string {
	if x != nil {
		return x.InternalName
	}
	return ""
}

func (x *ListMissionsRequest_Filters) GetScenarioTypes() []ListMissionsRequest_MissionScenarioType {
	if x != nil {
		return x.ScenarioTypes
	}
	return nil
}

func (x *ListMissionsRequest_Filters) GetOptInStrategyTypes() []ListMissionsRequest_MissionOptInStrategyType {
	if x != nil {
		return x.OptInStrategyTypes
	}
	return nil
}

func (x *ListMissionsRequest_Filters) GetConditionTypes() []ListMissionsRequest_MissionConditionType {
	if x != nil {
		return x.ConditionTypes
	}
	return nil
}

func (x *ListMissionsRequest_Filters) GetStatuses() []ListMissionsRequest_MissionStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListMissionsRequest_Filters) GetActiveFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveFrom
	}
	return nil
}

func (x *ListMissionsRequest_Filters) GetActiveTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveTo
	}
	return nil
}

// Mission represents mission entity.
type ListMissionsResponse_Mission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InternalName      string                                        `protobuf:"bytes,2,opt,name=internal_name,json=internalName,proto3" json:"internal_name,omitempty"`
	ScenarioType      ListMissionsResponse_MissionScenarioType      `protobuf:"varint,3,opt,name=scenario_type,json=scenarioType,proto3,enum=missions.ListMissionsResponse_MissionScenarioType" json:"scenario_type,omitempty"`
	Status            ListMissionsResponse_MissionStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=missions.ListMissionsResponse_MissionStatus" json:"status,omitempty"`
	OptInStrategyType ListMissionsResponse_MissionOptInStrategyType `protobuf:"varint,5,opt,name=opt_in_strategy_type,json=optInStrategyType,proto3,enum=missions.ListMissionsResponse_MissionOptInStrategyType" json:"opt_in_strategy_type,omitempty"`
	ExposedToCount    int64                                         `protobuf:"varint,6,opt,name=exposed_to_count,json=exposedToCount,proto3" json:"exposed_to_count,omitempty"`
	ConditionType     ListMissionsResponse_MissionConditionType     `protobuf:"varint,7,opt,name=condition_type,json=conditionType,proto3,enum=missions.ListMissionsResponse_MissionConditionType" json:"condition_type,omitempty"`
	OptedInCount      int64                                         `protobuf:"varint,8,opt,name=opted_in_count,json=optedInCount,proto3" json:"opted_in_count,omitempty"`
	TimesCompleted    int64                                         `protobuf:"varint,9,opt,name=times_completed,json=timesCompleted,proto3" json:"times_completed,omitempty"`
	ActiveFrom        *timestamppb.Timestamp                        `protobuf:"bytes,10,opt,name=active_from,json=activeFrom,proto3" json:"active_from,omitempty"`
	ActiveTo          *timestamppb.Timestamp                        `protobuf:"bytes,11,opt,name=active_to,json=activeTo,proto3" json:"active_to,omitempty"`
	CreatedAt         *timestamppb.Timestamp                        `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ListMissionsResponse_Mission) Reset() {
	*x = ListMissionsResponse_Mission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_missions_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionsResponse_Mission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionsResponse_Mission) ProtoMessage() {}

func (x *ListMissionsResponse_Mission) ProtoReflect() protoreflect.Message {
	mi := &file_missions_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionsResponse_Mission.ProtoReflect.Descriptor instead.
func (*ListMissionsResponse_Mission) Descriptor() ([]byte, []int) {
	return file_missions_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListMissionsResponse_Mission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListMissionsResponse_Mission) GetInternalName() string {
	if x != nil {
		return x.InternalName
	}
	return ""
}

func (x *ListMissionsResponse_Mission) GetScenarioType() ListMissionsResponse_MissionScenarioType {
	if x != nil {
		return x.ScenarioType
	}
	return ListMissionsResponse_MISSION_SCENARIO_TYPE_UNSPECIFIED
}

func (x *ListMissionsResponse_Mission) GetStatus() ListMissionsResponse_MissionStatus {
	if x != nil {
		return x.Status
	}
	return ListMissionsResponse_MISSION_STATUS_UNSPECIFIED
}

func (x *ListMissionsResponse_Mission) GetOptInStrategyType() ListMissionsResponse_MissionOptInStrategyType {
	if x != nil {
		return x.OptInStrategyType
	}
	return ListMissionsResponse_MISSION_OPT_IN_STRATEGY_TYPE_UNSPECIFIED
}

func (x *ListMissionsResponse_Mission) GetExposedToCount() int64 {
	if x != nil {
		return x.ExposedToCount
	}
	return 0
}

func (x *ListMissionsResponse_Mission) GetConditionType() ListMissionsResponse_MissionConditionType {
	if x != nil {
		return x.ConditionType
	}
	return ListMissionsResponse_MISSION_CONDITION_TYPE_UNSPECIFIED
}

func (x *ListMissionsResponse_Mission) GetOptedInCount() int64 {
	if x != nil {
		return x.OptedInCount
	}
	return 0
}

func (x *ListMissionsResponse_Mission) GetTimesCompleted() int64 {
	if x != nil {
		return x.TimesCompleted
	}
	return 0
}

func (x *ListMissionsResponse_Mission) GetActiveFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveFrom
	}
	return nil
}

func (x *ListMissionsResponse_Mission) GetActiveTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveTo
	}
	return nil
}

func (x *ListMissionsResponse_Mission) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var file_missions_service_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         1003,
		Name:          "missions.internal_value",
		Tag:           "bytes,1003,opt,name=internal_value",
		Filename:      "missions_service.proto",
	},
}

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional string internal_value = 1003;
	E_InternalValue = &file_missions_service_proto_extTypes[0]
)

var File_missions_service_proto protoreflect.FileDescriptor

var file_missions_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x93, 0x0d, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x8f, 0x04, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x0e, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d,
	0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x69, 0x0a,
	0x15, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x6f, 0x70, 0x74, 0x49, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x32, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x3b,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x37, 0x0a, 0x09, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x6f, 0x22, 0xc6, 0x02, 0x0a, 0x13, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x21,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41, 0x52, 0x49, 0x4f,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45,
	0x44, 0x12, 0x37, 0x0a, 0x22, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x45,
	0x4e, 0x41, 0x52, 0x49, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c,
	0x45, 0x5f, 0x57, 0x41, 0x47, 0x45, 0x52, 0x10, 0x01, 0x1a, 0x0f, 0xda, 0x3e, 0x0c, 0x53, 0x49,
	0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x57, 0x41, 0x47, 0x45, 0x52, 0x12, 0x3f, 0x0a, 0x26, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41, 0x52, 0x49, 0x4f, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x4d, 0x55, 0x4c, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x57,
	0x41, 0x47, 0x45, 0x52, 0x10, 0x02, 0x1a, 0x13, 0xda, 0x3e, 0x10, 0x43, 0x55, 0x4d, 0x55, 0x4c,
	0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x57, 0x41, 0x47, 0x45, 0x52, 0x12, 0x3b, 0x0a, 0x24, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41, 0x52, 0x49, 0x4f, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x03, 0x1a, 0x11, 0xda, 0x3e, 0x0e, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45,
	0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x12, 0x43, 0x0a, 0x28, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41, 0x52, 0x49, 0x4f, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x55, 0x4d, 0x55, 0x4c, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x50, 0x41, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x1a, 0x15, 0xda, 0x3e, 0x12, 0x43, 0x55, 0x4d, 0x55, 0x4c,
	0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x22, 0xc4, 0x01,
	0x0a, 0x18, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x28, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x52,
	0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x55, 0x4e, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x12, 0x32, 0x0a, 0x23, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x1a,
	0x09, 0xda, 0x3e, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x12, 0x38, 0x0a, 0x26, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x52,
	0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x4d,
	0x41, 0x54, 0x49, 0x43, 0x10, 0x02, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x41, 0x55, 0x54, 0x4f, 0x4d,
	0x41, 0x54, 0x49, 0x43, 0x22, 0xd6, 0x01, 0x0a, 0x14, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a,
	0x22, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x45, 0x44, 0x12, 0x2a, 0x0a, 0x1c, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x50,
	0x4f, 0x52, 0x54, 0x10, 0x01, 0x1a, 0x08, 0xda, 0x3e, 0x05, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x12,
	0x2c, 0x0a, 0x1d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x49, 0x4e, 0x4f,
	0x10, 0x02, 0x1a, 0x09, 0xda, 0x3e, 0x06, 0x43, 0x41, 0x53, 0x49, 0x4e, 0x4f, 0x12, 0x2e, 0x0a,
	0x1e, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x10,
	0x03, 0x1a, 0x0a, 0xda, 0x3e, 0x07, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x22, 0x89, 0x02,
	0x0a, 0x0d, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2c, 0x0a, 0x1a, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a,
	0x0c, 0xda, 0x3e, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x12, 0x24, 0x0a,
	0x15, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x1a, 0x09, 0xda, 0x3e, 0x06, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x12, 0x2a, 0x0a, 0x18, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10,
	0x02, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x12,
	0x26, 0x0a, 0x16, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x1a, 0x0a, 0xda, 0x3e, 0x07,
	0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x12, 0x28, 0x0a, 0x17, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56,
	0x45, 0x44, 0x10, 0x04, 0x1a, 0x0b, 0xda, 0x3e, 0x08, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45,
	0x44, 0x12, 0x26, 0x0a, 0x16, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x1a, 0x0a, 0xda,
	0x3e, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x22, 0xc0, 0x0e, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xcd, 0x05, 0x0a, 0x07, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x0d, 0x73, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x68, 0x0a, 0x14, 0x6f, 0x70, 0x74, 0x5f, 0x69,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11,
	0x6f, 0x70, 0x74, 0x49, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x6f, 0x73, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x70, 0x74, 0x65, 0x64,
	0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc6, 0x02, 0x0a, 0x13, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x33, 0x0a, 0x21, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41,
	0x52, 0x49, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x12, 0x37, 0x0a, 0x22, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x43, 0x45, 0x4e, 0x41, 0x52, 0x49, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49,
	0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x57, 0x41, 0x47, 0x45, 0x52, 0x10, 0x01, 0x1a, 0x0f, 0xda, 0x3e,
	0x0c, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x57, 0x41, 0x47, 0x45, 0x52, 0x12, 0x3f, 0x0a,
	0x26, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41, 0x52, 0x49,
	0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x4d, 0x55, 0x4c, 0x41, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x57, 0x41, 0x47, 0x45, 0x52, 0x10, 0x02, 0x1a, 0x13, 0xda, 0x3e, 0x10, 0x43, 0x55,
	0x4d, 0x55, 0x4c, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x57, 0x41, 0x47, 0x45, 0x52, 0x12, 0x3b,
	0x0a, 0x24, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41, 0x52,
	0x49, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x1a, 0x11, 0xda, 0x3e, 0x0e, 0x53, 0x49, 0x4e,
	0x47, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x12, 0x43, 0x0a, 0x28, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x41, 0x52, 0x49, 0x4f, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x4d, 0x55, 0x4c, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x1a, 0x15, 0xda, 0x3e, 0x12, 0x43, 0x55,
	0x4d, 0x55, 0x4c, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54,
	0x22, 0xc4, 0x01, 0x0a, 0x18, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x49,
	0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a,
	0x28, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x49, 0x4e, 0x5f,
	0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x0c, 0xda, 0x3e, 0x09,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x12, 0x32, 0x0a, 0x23, 0x4d, 0x49, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x52, 0x41,
	0x54, 0x45, 0x47, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x10, 0x01, 0x1a, 0x09, 0xda, 0x3e, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x12, 0x38, 0x0a,
	0x26, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x49, 0x4e, 0x5f,
	0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55,
	0x54, 0x4f, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x10, 0x02, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x41, 0x55,
	0x54, 0x4f, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x22, 0xd6, 0x01, 0x0a, 0x14, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x34, 0x0a, 0x22, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x55, 0x4e, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x12, 0x2a, 0x0a, 0x1c, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x1a, 0x08, 0xda, 0x3e, 0x05, 0x53, 0x50, 0x4f,
	0x52, 0x54, 0x12, 0x2c, 0x0a, 0x1d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f,
	0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x53,
	0x49, 0x4e, 0x4f, 0x10, 0x02, 0x1a, 0x09, 0xda, 0x3e, 0x06, 0x43, 0x41, 0x53, 0x49, 0x4e, 0x4f,
	0x12, 0x2e, 0x0a, 0x1e, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x10, 0x03, 0x1a, 0x0a, 0xda, 0x3e, 0x07, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x22, 0x89, 0x02, 0x0a, 0x0d, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2c, 0x0a, 0x1a, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44,
	0x12, 0x24, 0x0a, 0x15, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x1a, 0x09, 0xda, 0x3e, 0x06,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x12, 0x2a, 0x0a, 0x18, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x1a, 0x0c, 0xda, 0x3e, 0x09, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c,
	0x45, 0x44, 0x12, 0x26, 0x0a, 0x16, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x1a, 0x0a,
	0xda, 0x3e, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x12, 0x28, 0x0a, 0x17, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x43,
	0x48, 0x49, 0x56, 0x45, 0x44, 0x10, 0x04, 0x1a, 0x0b, 0xda, 0x3e, 0x08, 0x41, 0x52, 0x43, 0x48,
	0x49, 0x56, 0x45, 0x44, 0x12, 0x26, 0x0a, 0x16, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x05,
	0x1a, 0x0a, 0xda, 0x3e, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x22, 0x46, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x75, 0x0a, 0x0e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x4c, 0x0a, 0x0e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x15, 0x5a, 0x13, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_missions_service_proto_rawDescOnce sync.Once
	file_missions_service_proto_rawDescData = file_missions_service_proto_rawDesc
)

func file_missions_service_proto_rawDescGZIP() []byte {
	file_missions_service_proto_rawDescOnce.Do(func() {
		file_missions_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_missions_service_proto_rawDescData)
	})
	return file_missions_service_proto_rawDescData
}

var file_missions_service_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_missions_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_missions_service_proto_goTypes = []interface{}{
	(ListMissionsRequest_MissionScenarioType)(0),       // 0: missions.ListMissionsRequest.MissionScenarioType
	(ListMissionsRequest_MissionOptInStrategyType)(0),  // 1: missions.ListMissionsRequest.MissionOptInStrategyType
	(ListMissionsRequest_MissionConditionType)(0),      // 2: missions.ListMissionsRequest.MissionConditionType
	(ListMissionsRequest_MissionStatus)(0),             // 3: missions.ListMissionsRequest.MissionStatus
	(ListMissionsResponse_MissionScenarioType)(0),      // 4: missions.ListMissionsResponse.MissionScenarioType
	(ListMissionsResponse_MissionOptInStrategyType)(0), // 5: missions.ListMissionsResponse.MissionOptInStrategyType
	(ListMissionsResponse_MissionConditionType)(0),     // 6: missions.ListMissionsResponse.MissionConditionType
	(ListMissionsResponse_MissionStatus)(0),            // 7: missions.ListMissionsResponse.MissionStatus
	(*ListMissionsRequest)(nil),                        // 8: missions.ListMissionsRequest
	(*ListMissionsResponse)(nil),                       // 9: missions.ListMissionsResponse
	(*Pagination)(nil),                                 // 10: missions.Pagination
	(*Error)(nil),                                      // 11: missions.Error
	(*ListMissionsRequest_Filters)(nil),                // 12: missions.ListMissionsRequest.Filters
	(*ListMissionsResponse_Mission)(nil),               // 13: missions.ListMissionsResponse.Mission
	(*timestamppb.Timestamp)(nil),                      // 14: google.protobuf.Timestamp
	(*descriptorpb.EnumValueOptions)(nil),              // 15: google.protobuf.EnumValueOptions
}
var file_missions_service_proto_depIdxs = []int32{
	12, // 0: missions.ListMissionsRequest.filters:type_name -> missions.ListMissionsRequest.Filters
	10, // 1: missions.ListMissionsRequest.pagination:type_name -> missions.Pagination
	13, // 2: missions.ListMissionsResponse.missions:type_name -> missions.ListMissionsResponse.Mission
	0,  // 3: missions.ListMissionsRequest.Filters.scenario_types:type_name -> missions.ListMissionsRequest.MissionScenarioType
	1,  // 4: missions.ListMissionsRequest.Filters.opt_in_strategy_types:type_name -> missions.ListMissionsRequest.MissionOptInStrategyType
	2,  // 5: missions.ListMissionsRequest.Filters.condition_types:type_name -> missions.ListMissionsRequest.MissionConditionType
	3,  // 6: missions.ListMissionsRequest.Filters.statuses:type_name -> missions.ListMissionsRequest.MissionStatus
	14, // 7: missions.ListMissionsRequest.Filters.active_from:type_name -> google.protobuf.Timestamp
	14, // 8: missions.ListMissionsRequest.Filters.active_to:type_name -> google.protobuf.Timestamp
	4,  // 9: missions.ListMissionsResponse.Mission.scenario_type:type_name -> missions.ListMissionsResponse.MissionScenarioType
	7,  // 10: missions.ListMissionsResponse.Mission.status:type_name -> missions.ListMissionsResponse.MissionStatus
	5,  // 11: missions.ListMissionsResponse.Mission.opt_in_strategy_type:type_name -> missions.ListMissionsResponse.MissionOptInStrategyType
	6,  // 12: missions.ListMissionsResponse.Mission.condition_type:type_name -> missions.ListMissionsResponse.MissionConditionType
	14, // 13: missions.ListMissionsResponse.Mission.active_from:type_name -> google.protobuf.Timestamp
	14, // 14: missions.ListMissionsResponse.Mission.active_to:type_name -> google.protobuf.Timestamp
	14, // 15: missions.ListMissionsResponse.Mission.created_at:type_name -> google.protobuf.Timestamp
	15, // 16: missions.internal_value:extendee -> google.protobuf.EnumValueOptions
	8,  // 17: missions.MissionService.ListMissions:input_type -> missions.ListMissionsRequest
	9,  // 18: missions.MissionService.ListMissions:output_type -> missions.ListMissionsResponse
	18, // [18:19] is the sub-list for method output_type
	17, // [17:18] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	16, // [16:17] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_missions_service_proto_init() }
func file_missions_service_proto_init() {
	if File_missions_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_missions_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_missions_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_missions_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_missions_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_missions_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionsRequest_Filters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_missions_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionsResponse_Mission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_missions_service_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   6,
			NumExtensions: 1,
			NumServices:   1,
		},
		GoTypes:           file_missions_service_proto_goTypes,
		DependencyIndexes: file_missions_service_proto_depIdxs,
		EnumInfos:         file_missions_service_proto_enumTypes,
		MessageInfos:      file_missions_service_proto_msgTypes,
		ExtensionInfos:    file_missions_service_proto_extTypes,
	}.Build()
	File_missions_service_proto = out.File
	file_missions_service_proto_rawDesc = nil
	file_missions_service_proto_goTypes = nil
	file_missions_service_proto_depIdxs = nil
}
